{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nlet ReadFileComponent = class ReadFileComponent {\n  constructor(http) {\n    this.http = http;\n    this.gedPattern = \"^.*\\\\.ged$\";\n    this.projectNamePattern = \"^[a-z0-9_-]{0,60}$\";\n    this.fileForm = new FormGroup({\n      fileFullPath: new FormControl('', Validators.required),\n      projectName: new FormControl('', [Validators.required, Validators.minLength(3), Validators.maxLength(60), Validators.pattern(this.projectNamePattern)])\n    });\n  }\n  readGedcomFile() {}\n  fileFullPathChangeValue(fullPath) {\n    const file = fullPath.target.files[0];\n    this.filePath = this.fileForm.controls.fileFullPath.value;\n    if (!this.fileForm.controls.fileFullPath.errors) this.fileName = file.name;\n    this.fileLastModified = new Date(file.lastModified);\n    this.fileSize = formatBytes(file.size, 2);\n    this.fileType = file.type;\n  }\n  projectNameChangeValue() {\n    console.log(\"CHANGE: \" + this.fileForm.controls.projectName.value);\n  }\n  onSubmit() {}\n};\nReadFileComponent = __decorate([Component({\n  selector: 'app-read-file',\n  templateUrl: './read-file.component.html',\n  styleUrls: ['./read-file.component.css']\n})], ReadFileComponent);\nexport { ReadFileComponent };\nfunction formatBytes(bytes, dm = 2) {\n  if (bytes == 0) return '0 Bytes';\n  var k = 1024,\n    sizes = [`${bytes <= 1 ? \"Byte\" : \"Bytes\"}`, 'Kb', 'Mb', 'Gb', 'Tb', 'Pb', 'Eb', 'Zb', 'Yb'],\n    i = Math.floor(Math.log(bytes) / Math.log(k));\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n}","map":{"version":3,"names":["Component","FormGroup","FormControl","Validators","ReadFileComponent","constructor","http","gedPattern","projectNamePattern","fileForm","fileFullPath","required","projectName","minLength","maxLength","pattern","readGedcomFile","fileFullPathChangeValue","fullPath","file","target","files","filePath","controls","value","errors","fileName","name","fileLastModified","Date","lastModified","fileSize","formatBytes","size","fileType","type","projectNameChangeValue","console","log","onSubmit","__decorate","selector","templateUrl","styleUrls","bytes","dm","k","sizes","i","Math","floor","parseFloat","pow","toFixed"],"sources":["D:\\DEVELOPPEMENT\\JavaWorkspace\\gedcomtools\\frontend\\src\\app\\read-file\\read-file.component.ts"],"sourcesContent":["import { Component  } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\n@Component({\n\tselector: 'app-read-file',\n\ttemplateUrl: './read-file.component.html',\n\tstyleUrls: ['./read-file.component.css']\n})\n\nexport class ReadFileComponent {\n\t\n\tgedPattern = \"^.*\\\\.ged$\";\n\tprojectNamePattern = \"^[a-z0-9_-]{0,60}$\";\n\tfileName!: string;\n\tfilePath!: string;\n\tfileString!: string;\n\tfileLastModified!: Date;\n\tfileSize!: string;\n\tfileType!: string;\n\t\t\n\tfileForm = new FormGroup({\n\t    fileFullPath: new FormControl('', Validators.required),\n\t    projectName: new FormControl('', \n\t    \t\t[Validators.required, \n\t    \t\t Validators.minLength(3), \n\t    \t\t Validators.maxLength(60),\n\t    \t\t Validators.pattern(this.projectNamePattern)]),\t    \n\t});\n\t\n\tconstructor(private http: HttpClient) {} \n\t\n\t\n\treadGedcomFile() {}\n\t\n\tfileFullPathChangeValue(fullPath : any) {\n\t\tconst file: File = fullPath.target.files[0];\n\t\tthis.filePath = this.fileForm.controls.fileFullPath.value as string;\n\t\tif (!this.fileForm.controls.fileFullPath.errors) this.fileName = file.name;\t\n\t\tthis.fileLastModified = new Date(file.lastModified);\n\t\tthis.fileSize = formatBytes(file.size,2);\n\t\tthis.fileType = file.type;\n\n\t}\n\t\n\tprojectNameChangeValue() {\n\t\tconsole.log(\"CHANGE: \" + this.fileForm.controls.projectName.value);\n\t}\n\n\tonSubmit(){\n\t}\n}\n\nfunction formatBytes(bytes: number, dm = 2) {\n\t  if (bytes == 0) return '0 Bytes';\n\t  var k = 1024,\n\t    sizes = [`${bytes <= 1 ? \"Byte\" : \"Bytes\"}`, 'Kb', 'Mb', 'Gb', 'Tb', 'Pb', 'Eb', 'Zb', 'Yb'],\n\t    i = Math.floor(Math.log(bytes) / Math.log(k));\n\t  return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n\t}"],"mappings":";AAAA,SAASA,SAAS,QAAS,eAAe;AAE1C,SAASC,SAAS,EAAEC,WAAW,EAAEC,UAAU,QAAQ,gBAAgB;AAQnE,IAAaC,iBAAiB,GAA9B,MAAaA,iBAAiB;EAoB7BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAlBxB,KAAAC,UAAU,GAAG,YAAY;IACzB,KAAAC,kBAAkB,GAAG,oBAAoB;IAQzC,KAAAC,QAAQ,GAAG,IAAIR,SAAS,CAAC;MACrBS,YAAY,EAAE,IAAIR,WAAW,CAAC,EAAE,EAAEC,UAAU,CAACQ,QAAQ,CAAC;MACtDC,WAAW,EAAE,IAAIV,WAAW,CAAC,EAAE,EAC7B,CAACC,UAAU,CAACQ,QAAQ,EACnBR,UAAU,CAACU,SAAS,CAAC,CAAC,CAAC,EACvBV,UAAU,CAACW,SAAS,CAAC,EAAE,CAAC,EACxBX,UAAU,CAACY,OAAO,CAAC,IAAI,CAACP,kBAAkB,CAAC,CAAC;KAClD,CAAC;EAEqC;EAGvCQ,cAAcA,CAAA,GAAI;EAElBC,uBAAuBA,CAACC,QAAc;IACrC,MAAMC,IAAI,GAASD,QAAQ,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC3C,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACb,QAAQ,CAACc,QAAQ,CAACb,YAAY,CAACc,KAAe;IACnE,IAAI,CAAC,IAAI,CAACf,QAAQ,CAACc,QAAQ,CAACb,YAAY,CAACe,MAAM,EAAE,IAAI,CAACC,QAAQ,GAAGP,IAAI,CAACQ,IAAI;IAC1E,IAAI,CAACC,gBAAgB,GAAG,IAAIC,IAAI,CAACV,IAAI,CAACW,YAAY,CAAC;IACnD,IAAI,CAACC,QAAQ,GAAGC,WAAW,CAACb,IAAI,CAACc,IAAI,EAAC,CAAC,CAAC;IACxC,IAAI,CAACC,QAAQ,GAAGf,IAAI,CAACgB,IAAI;EAE1B;EAEAC,sBAAsBA,CAAA;IACrBC,OAAO,CAACC,GAAG,CAAC,UAAU,GAAG,IAAI,CAAC7B,QAAQ,CAACc,QAAQ,CAACX,WAAW,CAACY,KAAK,CAAC;EACnE;EAEAe,QAAQA,CAAA,GACR;CACA;AAzCYnC,iBAAiB,GAAAoC,UAAA,EAN7BxC,SAAS,CAAC;EACVyC,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,2BAA2B;CACvC,CAAC,C,EAEWvC,iBAAiB,CAyC7B;SAzCYA,iBAAiB;AA2C9B,SAAS4B,WAAWA,CAACY,KAAa,EAAEC,EAAE,GAAG,CAAC;EACvC,IAAID,KAAK,IAAI,CAAC,EAAE,OAAO,SAAS;EAChC,IAAIE,CAAC,GAAG,IAAI;IACVC,KAAK,GAAG,CAAC,GAAGH,KAAK,IAAI,CAAC,GAAG,MAAM,GAAG,OAAO,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;IAC5FI,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACX,GAAG,CAACM,KAAK,CAAC,GAAGK,IAAI,CAACX,GAAG,CAACQ,CAAC,CAAC,CAAC;EAC/C,OAAOK,UAAU,CAAC,CAACP,KAAK,GAAGK,IAAI,CAACG,GAAG,CAACN,CAAC,EAAEE,CAAC,CAAC,EAAEK,OAAO,CAACR,EAAE,CAAC,CAAC,GAAG,GAAG,GAAGE,KAAK,CAACC,CAAC,CAAC;AAC1E"},"metadata":{},"sourceType":"module","externalDependencies":[]}